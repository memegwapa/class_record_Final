/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Student;



import config.dbConnector;
import function.edit;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

/**
 *
 * @author user
 */
public class student extends javax.swing.JInternalFrame implements ActionListener, MouseListener, KeyListener {
  public String destination="";
File selectedFile;
public String oldpath;
public String path;
    public student() {
        initComponents();
        displayData();
           this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0)); 
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI(); 
        bi.setNorthPane(null);
          
        // Set custom renderer for table header
        JTableHeader header = userTable.getTableHeader();
        header.setDefaultRenderer(new CustomHeaderRenderer());

        // Set custom renderer for table columns
        userTable.setDefaultRenderer(Object.class, new CustomColumnRenderer());
    }
      
  
  public void displayData(){
       try{
           dbConnector dbc = new dbConnector();
           ResultSet rs = dbc.getData("SELECT *FROM tbl_studentlists");
          userTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch(SQLException ex){
           System.out.println("Errors: "+ex.getMessage());
        
       }
  }
  public class CustomColumnRenderer extends DefaultTableCellRenderer {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component cellComponent = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            // Change column background color
            if (column % 2 == 0) {
                cellComponent.setBackground(Color.GREEN);
            } else {
                cellComponent.setBackground(Color.GREEN);
            }
            return cellComponent;
        }
    }

    public class CustomHeaderRenderer implements TableCellRenderer {
        DefaultTableCellRenderer renderer;

        public CustomHeaderRenderer() {
            renderer = new DefaultTableCellRenderer();
            renderer.setHorizontalAlignment(JLabel.CENTER); // Center align header text
            renderer.setBackground(Color.WHITE); // Set header background color
            renderer.setForeground(Color.BLACK); // Set header text color
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            return renderer.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        }
    }


  

  
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new JPanel();
        panel = new JPanel();
        ref = new JPanel();
        jLabel8 = new JLabel();
        Add = new JPanel();
        jLabel9 = new JLabel();
        jLabel11 = new JLabel();
        sea1 = new JTextField();
        jLabel12 = new JLabel();
        jScrollPane1 = new JScrollPane();
        userTable = new JTable();
        edit = new JPanel();
        jLabel1 = new JLabel();
        delete = new JPanel();
        jLabel3 = new JLabel();
        jButton1 = new JButton();
        jLabel2 = new JLabel();

        jPanel1.setLayout(null);

        getContentPane().setLayout(new AbsoluteLayout());

        panel.setBackground(new Color(151, 188, 98));
        panel.setForeground(new Color(255, 51, 51));
        panel.setPreferredSize(new Dimension(660, 700));

        ref.setBackground(new Color(151, 188, 98));
        ref.addMouseListener(this);
        ref.setLayout(null);

        jLabel8.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel8.setIcon(new ImageIcon(getClass().getResource("/images/Refresh (3).png"))); // NOI18N
        jLabel8.setVerticalAlignment(SwingConstants.BOTTOM);
        jLabel8.addMouseListener(this);
        ref.add(jLabel8);
        jLabel8.setBounds(0, 0, 30, 30);

        Add.setBackground(new Color(151, 188, 98));
        Add.addMouseListener(this);
        Add.setLayout(new AbsoluteLayout());

        jLabel9.setIcon(new ImageIcon(getClass().getResource("/images/Add User Group Woman Man (1).png"))); // NOI18N
        Add.add(jLabel9, new AbsoluteConstraints(0, 0, -1, -1));

        jLabel11.setBackground(new Color(255, 255, 255));
        jLabel11.setFont(new Font("Arial", 1, 30)); // NOI18N
        jLabel11.setForeground(new Color(255, 255, 255));
        jLabel11.setText("Student list");

        sea1.setBorder(new LineBorder(new Color(51, 255, 0), 1, true));
        sea1.addMouseListener(this);
        sea1.addActionListener(this);
        sea1.addKeyListener(this);

        userTable.setOpaque(false);
        jScrollPane1.setViewportView(userTable);

        edit.setBackground(new Color(151, 188, 98));
        edit.addMouseListener(this);
        edit.setLayout(new AbsoluteLayout());

        jLabel1.setIcon(new ImageIcon(getClass().getResource("/images/Edit (3).png"))); // NOI18N
        edit.add(jLabel1, new AbsoluteConstraints(0, 0, -1, -1));

        delete.setBackground(new Color(151, 188, 98));
        delete.addMouseListener(this);
        delete.setLayout(null);

        jLabel3.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel3.setIcon(new ImageIcon(getClass().getResource("/images/Delete.png"))); // NOI18N
        jLabel3.addMouseListener(this);
        delete.add(jLabel3);
        jLabel3.setBounds(0, 0, 30, 30);

        jButton1.setFont(new Font("Arial", 1, 12)); // NOI18N
        jButton1.setIcon(new ImageIcon(getClass().getResource("/images/Print (8).png"))); // NOI18N
        jButton1.setText("Print");
        jButton1.setBorder(new LineBorder(new Color(51, 255, 0), 1, true));
        jButton1.setHorizontalTextPosition(SwingConstants.LEFT);
        jButton1.addActionListener(this);

        jLabel2.setFont(new Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Search");

        GroupLayout panelLayout = new GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(panelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel11, GroupLayout.PREFERRED_SIZE, 211, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 77, GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(Add, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edit, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(ref, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(jLabel2)
                        .addGap(0, 0, 0)
                        .addComponent(sea1, GroupLayout.PREFERRED_SIZE, 198, GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 588, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(301, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(panelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(jLabel11, GroupLayout.PREFERRED_SIZE, 63, GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(panelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(sea1)
                    .addComponent(ref, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(edit, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Add, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 436, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        getContentPane().add(panel, new AbsoluteConstraints(0, 0, 1010, 760));

        pack();
    }

    // Code for dispatching events from components to event handlers.

    public void actionPerformed(ActionEvent evt) {
        if (evt.getSource() == sea1) {
            student.this.sea1ActionPerformed(evt);
        }
        else if (evt.getSource() == jButton1) {
            student.this.jButton1ActionPerformed(evt);
        }
    }

    public void keyPressed(KeyEvent evt) {
    }

    public void keyReleased(KeyEvent evt) {
        if (evt.getSource() == sea1) {
            student.this.sea1KeyReleased(evt);
        }
    }

    public void keyTyped(KeyEvent evt) {
    }

    public void mouseClicked(MouseEvent evt) {
        if (evt.getSource() == ref) {
            student.this.refMouseClicked(evt);
        }
        else if (evt.getSource() == jLabel8) {
            student.this.jLabel8MouseClicked(evt);
        }
        else if (evt.getSource() == Add) {
            student.this.AddMouseClicked(evt);
        }
        else if (evt.getSource() == edit) {
            student.this.editMouseClicked(evt);
        }
        else if (evt.getSource() == delete) {
            student.this.deleteMouseClicked(evt);
        }
        else if (evt.getSource() == jLabel3) {
            student.this.jLabel3MouseClicked(evt);
        }
    }

    public void mouseEntered(MouseEvent evt) {
        if (evt.getSource() == ref) {
            student.this.refMouseEntered(evt);
        }
        else if (evt.getSource() == Add) {
            student.this.AddMouseEntered(evt);
        }
        else if (evt.getSource() == edit) {
            student.this.editMouseEntered(evt);
        }
        else if (evt.getSource() == delete) {
            student.this.deleteMouseEntered(evt);
        }
    }

    public void mouseExited(MouseEvent evt) {
        if (evt.getSource() == ref) {
            student.this.refMouseExited(evt);
        }
        else if (evt.getSource() == Add) {
            student.this.AddMouseExited(evt);
        }
        else if (evt.getSource() == edit) {
            student.this.editMouseExited(evt);
        }
        else if (evt.getSource() == delete) {
            student.this.deleteMouseExited(evt);
        }
    }

    public void mousePressed(MouseEvent evt) {
        if (evt.getSource() == sea1) {
            student.this.sea1MousePressed(evt);
        }
    }

    public void mouseReleased(MouseEvent evt) {
    }// </editor-fold>//GEN-END:initComponents

    private void sea1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_sea1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sea1ActionPerformed

    private void AddMouseEntered(MouseEvent evt) {//GEN-FIRST:event_AddMouseEntered
     Add.setBackground(new Color (0, 168, 107));
    }//GEN-LAST:event_AddMouseEntered

    private void AddMouseExited(MouseEvent evt) {//GEN-FIRST:event_AddMouseExited
        Add.setBackground(new Color (151,188,98));
    }//GEN-LAST:event_AddMouseExited

    private void editMouseEntered(MouseEvent evt) {//GEN-FIRST:event_editMouseEntered
       edit.setBackground(new Color (0, 168, 107));
    }//GEN-LAST:event_editMouseEntered

    private void editMouseExited(MouseEvent evt) {//GEN-FIRST:event_editMouseExited
         edit.setBackground(new Color (151,188,98));
    }//GEN-LAST:event_editMouseExited

    private void refMouseEntered(MouseEvent evt) {//GEN-FIRST:event_refMouseEntered
       ref.setBackground(new Color (0, 168, 107));
    }//GEN-LAST:event_refMouseEntered

    private void refMouseExited(MouseEvent evt) {//GEN-FIRST:event_refMouseExited
        ref.setBackground(new Color (151,188,98));
    }//GEN-LAST:event_refMouseExited

    private void AddMouseClicked(MouseEvent evt) {//GEN-FIRST:event_AddMouseClicked
      edit ed= new  edit ();
      ed.setVisible(true);
         ed.action="Add";
         ed.label.setText("SAVE");
    }//GEN-LAST:event_AddMouseClicked

    private void editMouseClicked(MouseEvent evt) {//GEN-FIRST:event_editMouseClicked
int rowindex= userTable.getSelectedRow();
if(rowindex<0){
    JOptionPane.showMessageDialog(null,"Please Select an Item");
}else{
    TableModel model=userTable.getModel();
    edit ed= new edit ();
    ed.ids.setText(""+model.getValueAt(rowindex,0));
      ed.fn.setText(""+model.getValueAt(rowindex,1));
        ed.ln.setText(""+model.getValueAt(rowindex,2));
          ed.age.setText(""+model.getValueAt(rowindex,3));         
            ed.gender=model.getValueAt(rowindex,4).toString();
           
             String gend =model.getValueAt(rowindex,4).toString();
            
            if(gend.equals("Male")){
    ed.male.setSelected(true);
}
         if(gend.equals("Female")){
    ed.female.setSelected(true);
}
             ed.setVisible(true);
            ed.action="Update";
            ed.label.setText("UPDATE");
    
}         

                                  
 
    }//GEN-LAST:event_editMouseClicked

    private void refMouseClicked(MouseEvent evt) {//GEN-FIRST:event_refMouseClicked
      displayData();
    }//GEN-LAST:event_refMouseClicked

    private void jLabel3MouseClicked(MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
                                    
    int rowIndex = userTable.getSelectedRow();
    if (rowIndex < 0) {
        JOptionPane.showMessageDialog(null, "Please select data first from the table!");
    } else {
        TableModel model = userTable.getModel();
        Object value = model.getValueAt(rowIndex, 0);
        String id = value.toString();
        int a = JOptionPane.showConfirmDialog(null, "Are you sure to delete ID: " + id);
        if (a == JOptionPane.YES_OPTION) {
            dbConnector dbc = new dbConnector();
            int ids = Integer.parseInt(id);
            dbc.deleteData(ids,"tbl_studentlists");
            displayData();
        }
    }


    }//GEN-LAST:event_jLabel3MouseClicked

    private void deleteMouseEntered(MouseEvent evt) {//GEN-FIRST:event_deleteMouseEntered
      delete.setBackground(new Color (0, 168, 107));
    }//GEN-LAST:event_deleteMouseEntered

    private void deleteMouseExited(MouseEvent evt) {//GEN-FIRST:event_deleteMouseExited
     delete.setBackground(new Color (151,188,98));
    }//GEN-LAST:event_deleteMouseExited

    private void deleteMouseClicked(MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
 
    }//GEN-LAST:event_deleteMouseClicked

    private void jButton1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      MessageFormat header = new MessageFormat("Student Details");
    MessageFormat footer = new MessageFormat("Page {0,number,integer}");
    try {
        userTable.print(JTable.PrintMode.FIT_WIDTH, header, footer);
    } catch (java.awt.print.PrinterException e) {
        System.err.format("Cannot print: %s%n", e.getMessage());
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void sea1MousePressed(MouseEvent evt) {//GEN-FIRST:event_sea1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_sea1MousePressed

    private void sea1KeyReleased(KeyEvent evt) {//GEN-FIRST:event_sea1KeyReleased
             DefaultTableModel model = (DefaultTableModel) userTable.getModel();
    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
    userTable.setRowSorter(sorter); // Set the row sorter to the table

    String regex = sea1.getText(); // Get the search text from the text field
    try {
        sorter.setRowFilter(RowFilter.regexFilter(regex));
    } catch (java.util.regex.PatternSyntaxException ex) {
        // Handle invalid regular expression syntax
        System.err.println("Invalid regular expression: " + ex.getMessage());
    }
    }//GEN-LAST:event_sea1KeyReleased

    private void jLabel8MouseClicked(MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
    displayData();
    }//GEN-LAST:event_jLabel8MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    JPanel Add;
    JPanel delete;
    JPanel edit;
    JButton jButton1;
    JLabel jLabel1;
    JLabel jLabel11;
    JLabel jLabel12;
    JLabel jLabel2;
    JLabel jLabel3;
    JLabel jLabel8;
    JLabel jLabel9;
    JPanel jPanel1;
    JScrollPane jScrollPane1;
    JPanel panel;
    JPanel ref;
    JTextField sea1;
    JTable userTable;
    // End of variables declaration//GEN-END:variables
}
